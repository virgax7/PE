# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

from functools import lru_cache
from itertools import count


@lru_cache(1000000)
def fib(x):
    if x == 0:
        return 1
    if x == 1:
        return 2

    return fib(x-1) + fib(x-2)


def main():
    so_far, cur_fib = 0, 0

    for idx in count():
        cur_fib = fib(idx)
        if cur_fib > 4000000:
            break
        so_far = so_far if cur_fib % 2 else so_far + cur_fib

    return so_far


if __name__ == '__main__':
    print(main())        

    
